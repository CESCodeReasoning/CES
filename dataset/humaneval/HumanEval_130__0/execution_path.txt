 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: main, funcname: tri
main.py(5):     if n == 0:
main.py(7):     my_tri = [1, 3]
main.py(8):     for i in range(2, n + 1):
main.py(9):         if i % 2 == 0:
main.py(10):             my_tri.append(i / 2 + 1)
main.py(8):     for i in range(2, n + 1):
main.py(9):         if i % 2 == 0:
main.py(12):             my_tri.append(my_tri[i - 1] + my_tri[i - 2] + (i + 3) / 2)
main.py(8):     for i in range(2, n + 1):
main.py(9):         if i % 2 == 0:
main.py(10):             my_tri.append(i / 2 + 1)
main.py(8):     for i in range(2, n + 1):
main.py(9):         if i % 2 == 0:
main.py(12):             my_tri.append(my_tri[i - 1] + my_tri[i - 2] + (i + 3) / 2)
main.py(8):     for i in range(2, n + 1):
main.py(9):         if i % 2 == 0:
main.py(10):             my_tri.append(i / 2 + 1)
main.py(8):     for i in range(2, n + 1):
main.py(9):         if i % 2 == 0:
main.py(12):             my_tri.append(my_tri[i - 1] + my_tri[i - 2] + (i + 3) / 2)
main.py(8):     for i in range(2, n + 1):
main.py(9):         if i % 2 == 0:
main.py(10):             my_tri.append(i / 2 + 1)
main.py(8):     for i in range(2, n + 1):
main.py(9):         if i % 2 == 0:
main.py(12):             my_tri.append(my_tri[i - 1] + my_tri[i - 2] + (i + 3) / 2)
main.py(8):     for i in range(2, n + 1):
main.py(9):         if i % 2 == 0:
main.py(10):             my_tri.append(i / 2 + 1)
main.py(8):     for i in range(2, n + 1):
main.py(9):         if i % 2 == 0:
main.py(12):             my_tri.append(my_tri[i - 1] + my_tri[i - 2] + (i + 3) / 2)
main.py(8):     for i in range(2, n + 1):
main.py(9):         if i % 2 == 0:
main.py(10):             my_tri.append(i / 2 + 1)
main.py(8):     for i in range(2, n + 1):
main.py(9):         if i % 2 == 0:
main.py(12):             my_tri.append(my_tri[i - 1] + my_tri[i - 2] + (i + 3) / 2)
main.py(8):     for i in range(2, n + 1):
main.py(9):         if i % 2 == 0:
main.py(10):             my_tri.append(i / 2 + 1)
main.py(8):     for i in range(2, n + 1):
main.py(9):         if i % 2 == 0:
main.py(12):             my_tri.append(my_tri[i - 1] + my_tri[i - 2] + (i + 3) / 2)
main.py(8):     for i in range(2, n + 1):
main.py(9):         if i % 2 == 0:
main.py(10):             my_tri.append(i / 2 + 1)
main.py(8):     for i in range(2, n + 1):
main.py(9):         if i % 2 == 0:
main.py(12):             my_tri.append(my_tri[i - 1] + my_tri[i - 2] + (i + 3) / 2)
main.py(8):     for i in range(2, n + 1):
main.py(9):         if i % 2 == 0:
main.py(10):             my_tri.append(i / 2 + 1)
main.py(8):     for i in range(2, n + 1):
main.py(9):         if i % 2 == 0:
main.py(12):             my_tri.append(my_tri[i - 1] + my_tri[i - 2] + (i + 3) / 2)
main.py(8):     for i in range(2, n + 1):
main.py(9):         if i % 2 == 0:
main.py(10):             my_tri.append(i / 2 + 1)
main.py(8):     for i in range(2, n + 1):
main.py(13):     return my_tri
