 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: main, funcname: has_close_elements
main.py(5):     for idx, elem in enumerate(numbers):
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(7):             if idx != idx2:
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(7):             if idx != idx2:
main.py(8):                 distance = abs(elem - elem2)
main.py(9):                 if distance < threshold:
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(7):             if idx != idx2:
main.py(8):                 distance = abs(elem - elem2)
main.py(9):                 if distance < threshold:
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(7):             if idx != idx2:
main.py(8):                 distance = abs(elem - elem2)
main.py(9):                 if distance < threshold:
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(7):             if idx != idx2:
main.py(8):                 distance = abs(elem - elem2)
main.py(9):                 if distance < threshold:
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(5):     for idx, elem in enumerate(numbers):
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(7):             if idx != idx2:
main.py(8):                 distance = abs(elem - elem2)
main.py(9):                 if distance < threshold:
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(7):             if idx != idx2:
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(7):             if idx != idx2:
main.py(8):                 distance = abs(elem - elem2)
main.py(9):                 if distance < threshold:
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(7):             if idx != idx2:
main.py(8):                 distance = abs(elem - elem2)
main.py(9):                 if distance < threshold:
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(7):             if idx != idx2:
main.py(8):                 distance = abs(elem - elem2)
main.py(9):                 if distance < threshold:
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(5):     for idx, elem in enumerate(numbers):
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(7):             if idx != idx2:
main.py(8):                 distance = abs(elem - elem2)
main.py(9):                 if distance < threshold:
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(7):             if idx != idx2:
main.py(8):                 distance = abs(elem - elem2)
main.py(9):                 if distance < threshold:
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(7):             if idx != idx2:
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(7):             if idx != idx2:
main.py(8):                 distance = abs(elem - elem2)
main.py(9):                 if distance < threshold:
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(7):             if idx != idx2:
main.py(8):                 distance = abs(elem - elem2)
main.py(9):                 if distance < threshold:
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(5):     for idx, elem in enumerate(numbers):
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(7):             if idx != idx2:
main.py(8):                 distance = abs(elem - elem2)
main.py(9):                 if distance < threshold:
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(7):             if idx != idx2:
main.py(8):                 distance = abs(elem - elem2)
main.py(9):                 if distance < threshold:
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(7):             if idx != idx2:
main.py(8):                 distance = abs(elem - elem2)
main.py(9):                 if distance < threshold:
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(7):             if idx != idx2:
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(7):             if idx != idx2:
main.py(8):                 distance = abs(elem - elem2)
main.py(9):                 if distance < threshold:
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(5):     for idx, elem in enumerate(numbers):
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(7):             if idx != idx2:
main.py(8):                 distance = abs(elem - elem2)
main.py(9):                 if distance < threshold:
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(7):             if idx != idx2:
main.py(8):                 distance = abs(elem - elem2)
main.py(9):                 if distance < threshold:
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(7):             if idx != idx2:
main.py(8):                 distance = abs(elem - elem2)
main.py(9):                 if distance < threshold:
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(7):             if idx != idx2:
main.py(8):                 distance = abs(elem - elem2)
main.py(9):                 if distance < threshold:
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(7):             if idx != idx2:
main.py(6):         for idx2, elem2 in enumerate(numbers):
main.py(5):     for idx, elem in enumerate(numbers):
main.py(12):     return False
