 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: main, funcname: get_max_triples
main.py(5):     A = [i * i - i + 1 for i in range(1, n + 1)]
 --- modulename: main, funcname: <listcomp>
main.py(5):     A = [i * i - i + 1 for i in range(1, n + 1)]
main.py(5):     A = [i * i - i + 1 for i in range(1, n + 1)]
main.py(5):     A = [i * i - i + 1 for i in range(1, n + 1)]
main.py(5):     A = [i * i - i + 1 for i in range(1, n + 1)]
main.py(5):     A = [i * i - i + 1 for i in range(1, n + 1)]
main.py(5):     A = [i * i - i + 1 for i in range(1, n + 1)]
main.py(5):     A = [i * i - i + 1 for i in range(1, n + 1)]
main.py(6):     ans = []
main.py(7):     for i in range(n):
main.py(8):         for j in range(i + 1, n):
main.py(9):             for k in range(j + 1, n):
main.py(10):                 if (A[i] + A[j] + A[k]) % 3 == 0:
main.py(9):             for k in range(j + 1, n):
main.py(10):                 if (A[i] + A[j] + A[k]) % 3 == 0:
main.py(9):             for k in range(j + 1, n):
main.py(10):                 if (A[i] + A[j] + A[k]) % 3 == 0:
main.py(9):             for k in range(j + 1, n):
main.py(10):                 if (A[i] + A[j] + A[k]) % 3 == 0:
main.py(9):             for k in range(j + 1, n):
main.py(8):         for j in range(i + 1, n):
main.py(9):             for k in range(j + 1, n):
main.py(10):                 if (A[i] + A[j] + A[k]) % 3 == 0:
main.py(11):                     ans += [(A[i], A[j], A[k])]
main.py(9):             for k in range(j + 1, n):
main.py(10):                 if (A[i] + A[j] + A[k]) % 3 == 0:
main.py(9):             for k in range(j + 1, n):
main.py(10):                 if (A[i] + A[j] + A[k]) % 3 == 0:
main.py(11):                     ans += [(A[i], A[j], A[k])]
main.py(9):             for k in range(j + 1, n):
main.py(8):         for j in range(i + 1, n):
main.py(9):             for k in range(j + 1, n):
main.py(10):                 if (A[i] + A[j] + A[k]) % 3 == 0:
main.py(9):             for k in range(j + 1, n):
main.py(10):                 if (A[i] + A[j] + A[k]) % 3 == 0:
main.py(11):                     ans += [(A[i], A[j], A[k])]
main.py(9):             for k in range(j + 1, n):
main.py(8):         for j in range(i + 1, n):
main.py(9):             for k in range(j + 1, n):
main.py(10):                 if (A[i] + A[j] + A[k]) % 3 == 0:
main.py(9):             for k in range(j + 1, n):
main.py(8):         for j in range(i + 1, n):
main.py(9):             for k in range(j + 1, n):
main.py(8):         for j in range(i + 1, n):
main.py(7):     for i in range(n):
main.py(8):         for j in range(i + 1, n):
main.py(9):             for k in range(j + 1, n):
main.py(10):                 if (A[i] + A[j] + A[k]) % 3 == 0:
main.py(9):             for k in range(j + 1, n):
main.py(10):                 if (A[i] + A[j] + A[k]) % 3 == 0:
main.py(9):             for k in range(j + 1, n):
main.py(10):                 if (A[i] + A[j] + A[k]) % 3 == 0:
main.py(9):             for k in range(j + 1, n):
main.py(8):         for j in range(i + 1, n):
main.py(9):             for k in range(j + 1, n):
main.py(10):                 if (A[i] + A[j] + A[k]) % 3 == 0:
main.py(9):             for k in range(j + 1, n):
main.py(10):                 if (A[i] + A[j] + A[k]) % 3 == 0:
main.py(9):             for k in range(j + 1, n):
main.py(8):         for j in range(i + 1, n):
main.py(9):             for k in range(j + 1, n):
main.py(10):                 if (A[i] + A[j] + A[k]) % 3 == 0:
main.py(9):             for k in range(j + 1, n):
main.py(8):         for j in range(i + 1, n):
main.py(9):             for k in range(j + 1, n):
main.py(8):         for j in range(i + 1, n):
main.py(7):     for i in range(n):
main.py(8):         for j in range(i + 1, n):
main.py(9):             for k in range(j + 1, n):
main.py(10):                 if (A[i] + A[j] + A[k]) % 3 == 0:
main.py(9):             for k in range(j + 1, n):
main.py(10):                 if (A[i] + A[j] + A[k]) % 3 == 0:
main.py(11):                     ans += [(A[i], A[j], A[k])]
main.py(9):             for k in range(j + 1, n):
main.py(8):         for j in range(i + 1, n):
main.py(9):             for k in range(j + 1, n):
main.py(10):                 if (A[i] + A[j] + A[k]) % 3 == 0:
main.py(9):             for k in range(j + 1, n):
main.py(8):         for j in range(i + 1, n):
main.py(9):             for k in range(j + 1, n):
main.py(8):         for j in range(i + 1, n):
main.py(7):     for i in range(n):
main.py(8):         for j in range(i + 1, n):
main.py(9):             for k in range(j + 1, n):
main.py(10):                 if (A[i] + A[j] + A[k]) % 3 == 0:
main.py(9):             for k in range(j + 1, n):
main.py(8):         for j in range(i + 1, n):
main.py(9):             for k in range(j + 1, n):
main.py(8):         for j in range(i + 1, n):
main.py(7):     for i in range(n):
main.py(8):         for j in range(i + 1, n):
main.py(9):             for k in range(j + 1, n):
main.py(8):         for j in range(i + 1, n):
main.py(7):     for i in range(n):
main.py(8):         for j in range(i + 1, n):
main.py(7):     for i in range(n):
main.py(12):     return len(ans)
