 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: main, funcname: is_sorted
main.py(5):     count_digit = dict([(i, 0) for i in lst])
 --- modulename: main, funcname: <listcomp>
main.py(5):     count_digit = dict([(i, 0) for i in lst])
main.py(5):     count_digit = dict([(i, 0) for i in lst])
main.py(5):     count_digit = dict([(i, 0) for i in lst])
main.py(5):     count_digit = dict([(i, 0) for i in lst])
main.py(6):     for i in lst:
main.py(7):         count_digit[i] += 1
main.py(6):     for i in lst:
main.py(7):         count_digit[i] += 1
main.py(6):     for i in lst:
main.py(7):         count_digit[i] += 1
main.py(6):     for i in lst:
main.py(8):     if any(count_digit[i] > 2 for i in lst):
 --- modulename: main, funcname: <genexpr>
main.py(8):     if any(count_digit[i] > 2 for i in lst):
 --- modulename: main, funcname: <genexpr>
main.py(8):     if any(count_digit[i] > 2 for i in lst):
 --- modulename: main, funcname: <genexpr>
main.py(8):     if any(count_digit[i] > 2 for i in lst):
 --- modulename: main, funcname: <genexpr>
main.py(8):     if any(count_digit[i] > 2 for i in lst):
main.py(10):     if all(lst[i - 1] <= lst[i] for i in range(1, len(lst))):
 --- modulename: main, funcname: <genexpr>
main.py(10):     if all(lst[i - 1] <= lst[i] for i in range(1, len(lst))):
 --- modulename: main, funcname: <genexpr>
main.py(13):         return False
