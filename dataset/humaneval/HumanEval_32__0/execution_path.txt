 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: main, funcname: find_zero
main.py(10):     begin, end = -1., 1.
main.py(11):     while poly(xs, begin) * poly(xs, end) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(19):             end = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(19):             end = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(17):             begin = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(19):             end = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(19):             end = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(19):             end = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(19):             end = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(19):             end = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(17):             begin = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(17):             begin = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(19):             end = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(19):             end = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(19):             end = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(19):             end = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(17):             begin = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(17):             begin = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(17):             begin = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(19):             end = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(19):             end = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(17):             begin = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(17):             begin = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(19):             end = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(17):             begin = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(19):             end = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(17):             begin = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(19):             end = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(19):             end = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(19):             end = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(19):             end = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(17):             begin = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(17):             begin = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(17):             begin = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(17):             begin = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(19):             end = center
main.py(14):     while end - begin > 1e-10:
main.py(15):         center = (begin + end) / 2.0
main.py(16):         if poly(xs, center) * poly(xs, begin) > 0:
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: poly
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
 --- modulename: main, funcname: <listcomp>
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(6):     return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])
main.py(19):             end = center
main.py(14):     while end - begin > 1e-10:
main.py(20):     return begin
