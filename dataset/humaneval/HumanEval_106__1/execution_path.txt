 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: main, funcname: f
main.py(5):     ret = []
main.py(6):     for i in range(1, n + 1):
main.py(7):         if i % 2 == 0:
main.py(13):             x = 0
main.py(14):             for j in range(1, i + 1):
main.py(15):                 x += j
main.py(14):             for j in range(1, i + 1):
main.py(16):             ret += [x]
main.py(6):     for i in range(1, n + 1):
main.py(7):         if i % 2 == 0:
main.py(8):             x = 1
main.py(9):             for j in range(1, i + 1):
main.py(10):                 x *= j
main.py(9):             for j in range(1, i + 1):
main.py(10):                 x *= j
main.py(9):             for j in range(1, i + 1):
main.py(11):             ret += [x]
main.py(6):     for i in range(1, n + 1):
main.py(7):         if i % 2 == 0:
main.py(13):             x = 0
main.py(14):             for j in range(1, i + 1):
main.py(15):                 x += j
main.py(14):             for j in range(1, i + 1):
main.py(15):                 x += j
main.py(14):             for j in range(1, i + 1):
main.py(15):                 x += j
main.py(14):             for j in range(1, i + 1):
main.py(16):             ret += [x]
main.py(6):     for i in range(1, n + 1):
main.py(7):         if i % 2 == 0:
main.py(8):             x = 1
main.py(9):             for j in range(1, i + 1):
main.py(10):                 x *= j
main.py(9):             for j in range(1, i + 1):
main.py(10):                 x *= j
main.py(9):             for j in range(1, i + 1):
main.py(10):                 x *= j
main.py(9):             for j in range(1, i + 1):
main.py(10):                 x *= j
main.py(9):             for j in range(1, i + 1):
main.py(11):             ret += [x]
main.py(6):     for i in range(1, n + 1):
main.py(7):         if i % 2 == 0:
main.py(13):             x = 0
main.py(14):             for j in range(1, i + 1):
main.py(15):                 x += j
main.py(14):             for j in range(1, i + 1):
main.py(15):                 x += j
main.py(14):             for j in range(1, i + 1):
main.py(15):                 x += j
main.py(14):             for j in range(1, i + 1):
main.py(15):                 x += j
main.py(14):             for j in range(1, i + 1):
main.py(15):                 x += j
main.py(14):             for j in range(1, i + 1):
main.py(16):             ret += [x]
main.py(6):     for i in range(1, n + 1):
main.py(7):         if i % 2 == 0:
main.py(8):             x = 1
main.py(9):             for j in range(1, i + 1):
main.py(10):                 x *= j
main.py(9):             for j in range(1, i + 1):
main.py(10):                 x *= j
main.py(9):             for j in range(1, i + 1):
main.py(10):                 x *= j
main.py(9):             for j in range(1, i + 1):
main.py(10):                 x *= j
main.py(9):             for j in range(1, i + 1):
main.py(10):                 x *= j
main.py(9):             for j in range(1, i + 1):
main.py(10):                 x *= j
main.py(9):             for j in range(1, i + 1):
main.py(11):             ret += [x]
main.py(6):     for i in range(1, n + 1):
main.py(7):         if i % 2 == 0:
main.py(13):             x = 0
main.py(14):             for j in range(1, i + 1):
main.py(15):                 x += j
main.py(14):             for j in range(1, i + 1):
main.py(15):                 x += j
main.py(14):             for j in range(1, i + 1):
main.py(15):                 x += j
main.py(14):             for j in range(1, i + 1):
main.py(15):                 x += j
main.py(14):             for j in range(1, i + 1):
main.py(15):                 x += j
main.py(14):             for j in range(1, i + 1):
main.py(15):                 x += j
main.py(14):             for j in range(1, i + 1):
main.py(15):                 x += j
main.py(14):             for j in range(1, i + 1):
main.py(16):             ret += [x]
main.py(6):     for i in range(1, n + 1):
main.py(17):     return ret
