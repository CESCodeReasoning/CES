The function `smallest_change` is called with ( arr = [1, 2, 3, 4, 3, 2, 2] ).
Inside the function, a variable `ans` is initialized to 0.
The loop iterates from 0 through (len(arr) // 2) - 1 (since (len(arr) // 2) = 3).
First Iteration (i = 0)
   - `i` is 0, which satisfies ( 0 <= i < 3 ).
   - The condition `arr[i] != arr[len(arr) - i - 1]` is true.
   - Action: `ans += 1` updates `ans` to 1.
Second Iteration (i = 1)
   - `i` is 1, which still satisfies ( 0 <= i < 3 ).
   - The same condition is true.
   - Action: `ans += 1` updates `ans` to 2.
Third Iteration (i = 2)
   - `i` is 2, which now satisfies ( 2 <= i < 3 ).
   - The condition `arr[i] != arr[len(arr) - i - 1]` is false.
   - Action: `ans += 1` does not update `ans`.
Therefore, the final output of the function `smallest_change([1, 2, 3, 4, 3, 2, 2])` is 2.
