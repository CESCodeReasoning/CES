The function common(l1, l2) takes two lists as its parameters.
The outer loop iterates through each element in the first list.
In the inner loop, for each element indexed by e1 in the outer loop, compare it with every element in the second list.
First Iteration (e1=5):
    - `e1` is 5, `e2` in the inner loop is 3, 2, 8.
    - `l1` is [5, 3, 2, 8], `l2` is [3, 2].
    - `e1` is not equal to `e2` in the inner loop, the if branch is not taken.
Second Iteration (e1=3):
    - `e1` is 3, `e2` in the inner loop is 2, 8.
    - `l1` is [5, 3, 2, 8], `l2` is [3, 2].
    - `e1` is equal to `e2` in the inner loop, the if branch is taken.
    - Add 3 to the set `ret`.
Third Iteration (e1=2):
    - `e1` is 2, `e2` in the inner loop is 8.
    - `l1` is [5, 3, 2, 8], `l2` is [3, 2].
    - `e1` is not equal to `e2` in the inner loop, the if branch is not taken.
Forth Iteration (e1=8):
    - `e1` is 8, `e2` in the inner loop is nothing.
    - `l1` is [5, 3, 2, 8], `l2` is [3, 2].
    - `e1` is not equal to `e2` in the inner loop, the if branch is not taken.
Fifth Iteration (e1=nothing):
    No more elements to compare.
