from typing import *
import math


def poly(xs: list, x: float):
    return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])


def find_zero(xs: list):
    begin, end = -1., 1.
    while poly(xs, begin) * poly(xs, end) > 0:
        begin *= 2.0
        end *= 2.0
    while end - begin > 1e-10: ## [STATE]((end - begin) > 1e-10)=[True, True, True, True, False][/STATE][STATE](end - begin)=[2.0, 1.0, 0.5, 0.25, 0.125][/STATE]
        center = (begin + end) / 2.0
        if poly(xs, center) * poly(xs, begin) > 0: ## [CONDITION](poly(xs, center) * poly(xs, begin) > 0)=[True, True, False, False, False][/CONDITION][BRANCH]taken=[Y, Y, N, N, N][/BRANCH]
            begin = center
        else: ## [BRANCH]taken=[N, N, Y, Y, N][/BRANCH]
            end = center
    return begin
