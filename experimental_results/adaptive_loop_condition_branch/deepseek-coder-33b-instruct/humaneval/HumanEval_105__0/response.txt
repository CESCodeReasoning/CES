
[REASONING]
The function `by_length` is called with (arr = [1, -1, 3, 2] ).
Inside the function, a dictionary `dic` is initialized with number-word pairs.
`sorted_arr` is created by sorting `arr` in descending order.
The loop iterates over each element in `sorted_arr`.

First Iteration(var = 3):
    dic[var] = 'Three'
    'Three' is appended to `new_arr`
Second Iteration(var = 2):
    dic[var] = 'Two'
    'Two' is appended to `new_arr`
Third Iteration(var = 1):
    dic[var] = 'One'
    'One' is appended to `new_arr`
Forth Iteration(var = -1):
    dic[var] throws a KeyError because -1 is not a key in `dic`
    The except block catches the KeyError and does nothing, so `new_arr` remains the same.
[/REASONING]

[ANSWER]
from typing import *


def by_length(arr):
    dic = {
        1: "One",
        2: "Two",
        3: "Three",
        4: "Four",
        5: "Five",
        6: "Six",
        7: "Seven",
        8: "Eight",
        9: "Nine",
    }
    sorted_arr = sorted(arr, reverse=True)
    new_arr = []
    for var in sorted_arr: ## [STATE]var=[3, 2, 1, -1][/STATE][STATE]sorted_arr=[3, 2, 1, -1][/STATE]
        try:
            new_arr.append(dic[var])
        except BaseException:
            pass
    return new_arr
[/ANSWER]

[OUTPUT]
['Three', 'Two', 'One']
[/OUTPUT]
