The function common(l1, l2) takes two lists as its parameters.
The outer loop iterates through each element in the first list to compare it against the elements in the second list.
In the inner loop, for each element indexed by e1 in the outer loop, compare it with every element in the second list.
First Iteration (e1=4):
    - `e1` is 4, e2 in the inner loop is 3, 2, 8.
    - 4 != 3, 4 != 2, 4 != 8:
        - When e2 = 3, the condition `e1 == e2` is False, the if branch is not taken.
        - When e2 = 2, the condition `e1 == e2` is False, the if branch is not taken.
        - When e2 = 8, the condition `e1 == e2` is False, the if branch is not taken.
Second Iteration (e1=3):
    - `e1` is 3, e2 in the inner loop is 2, 4.
    - 3 == 2, 3 != 4:
        - When e2 = 2, the condition `e1 == e2` is True, the if branch is taken. Add 3 to ret.
        - When e2 = 4, the condition `e1 == e2` is False, the if branch is not taken.
Third Iteration (e1=2):
    - `e1` is 2, e2 in the inner loop is 4.
    - 2 == 4, 2 == 4:
        - When e2 = 4, the condition `e1 == e2` is True, the if branch is taken. Add 2 to ret.
Forth Iteration (e1=8):
    - `e1` is 8, e2 in the inner loop is 3, 2, 4.
    - 8 != 3, 8 != 2, 8 != 4:
        - When e2 = 3, the condition `e1 == e2` is False, the if branch is not taken.
        - When e2 = 2, the condition `e1 == e2` is False, the if branch is not taken.
        - When e2 = 4, the condition `e1 == e2` is False, the if branch is not taken.
