The function `fib4` is called with ( n = 12 ).
The condition ( n < 4 ) is not satisfied, therefore the if branch is not taken.
The loop iterates from 4 through 12 (since ( n = 12 )).
First Iteration (i = 4):
    results.append(results[-1] + results[-2] + results[-3] + results[-4]) updates results to [0, 0, 2, 0, 3].
Second Iteration (i = 5):
    results.append(results[-1] + results[-2] + results[-3] + results[-4]) updates results to [0, 0, 2, 0, 3, 5].
Third Iteration (i = 6)
    results.append(results[-1] + results[-2] + results[-3] + results[-4]) updates results to [0, 0, 2, 0, 3, 5, 8].
Fourth Iteration (i = 7)
    results.append(results[-1] + results[-2] + results[-3] + results[-4]) updates results to [0, 0, 2, 0, 3, 5, 8, 13].
Fifth Iteration (i = 8)
    results.append(results[-1] + results[-2] + results[-3] + results[-4]) updates results to [0, 0, 2, 0, 3, 5, 8, 13, 21].
Sixth Iteration (i = 9)
    results.append(results[-1] + results[-2] + results[-3] + results[-4]) updates results to [0, 0, 2, 0, 3, 5, 8, 13, 21, 34].
Seventh Iteration (i = 10)
    results.append(results[-1] + results[-2] + results[-3] + results[-4]) updates results to [0, 0, 2, 0, 3, 5, 8, 13, 21, 34, 55].
Eighth Iteration (i = 11)
    results.append(results[-1] + results[-2] + results[-3] + results[-4]) updates results to [0, 0, 2, 0, 3, 5, 8, 13, 21, 34, 55, 89].
Ninth Iteration (i = 12)
    results.append(results[-1] + results[-2] + results[-3] + results[-4]) updates results to [0, 0, 2, 0, 3, 5, 8, 13, 21, 34, 55, 89, 144].
After the loop completes, the function returns the last element of the results list, which is 144.
