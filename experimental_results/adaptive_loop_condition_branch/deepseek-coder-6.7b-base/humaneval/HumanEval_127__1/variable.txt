from typing import *


def intersection(interval1, interval2):
    def is_prime(num):
        if num == 1 or num == 0: ## [CONDITION](num == 1 or num == 0)=[False, False][/CONDITION][CONDITION](num == 1)=[False][/CONDITION][CONDITION](num == 0)=[False][/CONDITION][BRANCH]taken=[N, N, N][/BRANCH]
            return False
        if num == 2:
            return True
        for i in range(2, num): ## [STATE]range(2, num)=[2, 3][/STATE][STATE]num=[4][/STATE]
            if num % i == 0:
                return False
        return True

    l = max(interval1[0], interval2[0])
    r = min(interval1[1], interval2[1])
    length = r - l
    if length > 0 and is_prime(length): ## [CONDITION](length > 0 and is_prime(length))=[True][/CONDITION][CONDITION](length > 0)=[True][/CONDITION][CONDITION](is_prime(length))=[True][/CONDITION][BRANCH]taken=[Y][/BRANCH]
        return "YES"
    return "NO"
