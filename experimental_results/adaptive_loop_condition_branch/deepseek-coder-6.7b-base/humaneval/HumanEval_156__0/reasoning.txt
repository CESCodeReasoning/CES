The function `int_to_mini_roman` is called with ( number = 900 ).
The variable `num` is a list of integers representing the values of the Roman numerals.
The variable `sym` is a list of strings representing the Roman numerals.
The variable `i` is an integer that is initialized to 12.
The variable `res` is an empty string that will be used to store the result.
The while loop iterates from 12 to 0 (since ( number = 900 )).
First Iteration (i = 12):
    - div = 900 // num[12] = 900 // 1000 = 0
    - number %= num[12] = 900 % 1000 = 900
    - while div: ## [STATE]div=[0][/STATE]
        - res += sym[12] = 'M'
        - div -= 1
Second Iteration (i = 11):
    - div = 900 // num[11] = 900 // 900 = 1
    - number %= num[11] = 900 % 900 = 0
    - while div: ## [STATE]div=[1][/STATE]
        - res += sym[11] = 'CM'
        - div -= 1
Third Iteration (i = 10):
    - div = 0 // num[10] = 0 // 500 = 0
    - number %= num[10] = 0 % 500 = 0
    - while div: ## [STATE]div=[0][/STATE]
        - res += sym[10] = 'D'
        - div -= 1
Fourth Iteration (i = 9):
    - div = 0 // num[9] = 0 // 400 = 0
    - number %= num[9] = 0 % 400 = 0
    - while div: ## [STATE]div=[0][/STATE]
        - res += sym[9] = 'CD'
        - div -= 1
Fifth Iteration (i = 8):
    - div = 0 // num[8] = 0 // 100 = 0
    - number %= num[8] = 0 % 100 = 0
    - while div: ## [STATE]div=[0][/STATE]
        - res += sym[8] = 'C'
        - div -= 1
Sixth Iteration (i = 7):
    - div = 0 // num[7] = 0 // 90 = 0
    - number %= num[7] = 0 % 90 = 0
    - while div: ## [STATE]div=[0][/STATE]
        - res += sym[7] = 'XC'
        - div -= 1
Seventh Iteration (i = 6):
    - div = 0 // num[6] = 0 // 50 = 0
    - number %= num[6] = 0 % 50 = 0
    - while div: ## [STATE]div=[0][/STATE]
        - res += sym[6] = 'L'
        - div -= 1
Eighth Iteration (i = 5):
    - div = 0 // num[5] = 0 // 40 = 0
    - number %= num[5] = 0 % 40 = 0
    - while div: ## [STATE]div=[0][/STATE]
        - res += sym[5] = 'XL'
        - div -= 1
Ninth Iteration (i = 4):
    - div = 0 // num[4] = 0 // 10 = 0
    - number %= num[4] = 0 % 10 = 0
    - while div: ## [STATE]div=[0][/STATE]
        - res += sym[4] = 'X'
        - div -= 1
Tenth Iteration (i = 3):
    - div = 0 // num[3] = 0 // 9 = 0
    - number %= num[3] = 0 % 9 = 0
    - while div: ## [STATE]div=[0][/STATE]
        - res += sym[3] = 'IX'
        - div -