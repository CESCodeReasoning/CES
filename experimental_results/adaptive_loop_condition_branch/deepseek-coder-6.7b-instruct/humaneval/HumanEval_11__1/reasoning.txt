The function `string_xor` is called with ( a = '0101', b = '0000' ).
The function `xor` is defined inside `string_xor`. It takes two characters (i, j) and returns '0' if they are the same, otherwise it returns '1'.
The `zip` function is used to pair the characters from `a` and `b` together.
The `join` function is used to concatenate the results of the `xor` function applied to each pair of characters.

In the first pair of characters (i = '0', j = '0'), the condition `i == j` is false, so the else branch is taken and '1' is returned.
In the second pair of characters (i = '1', j = '0'), the condition `i == j` is false, so the else branch is taken and '1' is returned.
In the third pair of characters (i = '0', j = '0'), the condition `i == j` is true, so the if branch is taken and '0' is returned.
In the fourth pair of characters (i = '1', j = '0'), the condition `i == j` is false, so the else branch is taken and '1' is returned.

Therefore, the final output of the function `string_xor('0101', '0000')` is '1101'.
