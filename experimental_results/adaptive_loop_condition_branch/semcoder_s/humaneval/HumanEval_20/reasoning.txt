The function find_closest_elements(numbers: List[float]) -> Tuple[float, float] takes a list of floating-point numbers as its parameter.
The function iterates through each element in the list to compare it with every other element in the list.
For each pair of elements, calculate the absolute difference and check if it is less than the current minimum distance. If it is, update the closest pair and the distance.
First Iteration (idx=0, elem=1.0):
    - Compare with all other elements: (1.0, 2.0), (1.0, 3.9), (1.0, 4.0), (1.0, 5.0), (1.0, 2.2)
        - When idx2 = 1 (elem2=2.0), the condition `idx != idx2` is False, the if branch is not taken.
        - When idx2 = 2 (elem2=3.9), the condition `idx != idx2` is False, the if branch is not taken.
        - When idx2 = 3 (elem2=4.0), the condition `idx != idx2` is False, the if branch is not taken.
        - When idx2 = 4 (elem2=5.0), the condition `idx != idx2` is False, the if branch is not taken.
        - When idx2 = 5 (elem2=2.2), the condition `idx != idx2` is False, the if branch is not taken.
Second Iteration (idx=1, elem=2.0):
    - Compare with all other elements: (2.0, 3.9), (2.0, 4.0), (2.0, 5.0), (2.0, 2.2)
        - When idx2 = 2 (elem2=3.9), the condition `idx != idx2` is False, the if branch is not taken.
        - When idx2 = 3 (elem2=4.0), the condition `idx != idx2` is False, the if branch is not taken.
        - When idx2 = 4 (elem2=5.0), the condition `idx != idx2` is False, the if branch is not taken.
        - When idx2 = 5 (elem2=2.2), the condition `idx != idx2` is False, the if branch is not taken.
Third Iteration (idx=2, elem=3.9):
    - Compare with all other elements: (3.9, 4.0), (3.9, 5.0), (3.9, 2.2)
        - When idx2 = 3 (elem2=4.0), the condition `idx != idx2` is False, the if branch is not taken.
        - When idx2 = 4 (elem2=5.0), the condition `idx != idx2` is False, the if branch is not taken.
        - When idx2 = 5 (elem2=2.2), the condition `idx != idx2` is False, the if branch is not taken.
Fourth Iteration (idx=3, elem=4.0):
    - Compare with all other elements: (4.0, 5.0), (4.0, 2.2)
        - When idx2 = 4 (elem2=5.0), the condition `idx != idx2` is False, the if branch is not taken.
        - When idx2 = 5 (elem2=2.2), the condition `idx != idx2` is False, the if branch is not taken.
Fifth Iteration (idx=4, elem=5.0):
    - Compare with all other elements: (5.0, 2.2)
        - When idx2 = 5 (elem2=2.2), the condition `idx != idx2` is False, the if branch is not taken.
Sixth Iteration (idx=5, elem=2.2):
    - Compare with all other elements: (2.2, 2.2)
        - When idx2 = 5 (elem2=2.2), the condition `idx != idx2` is False, the if branch is not taken.
