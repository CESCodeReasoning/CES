The function get_max_triples(n) takes an integer n as its parameter.
It first calculates the sequence A = [i * i - i + 1 for i in range(1, n + 1)] based on the given formula.
Then it iterates through each element in the sequence A to find unique triples that satisfy the condition (A[i] + A[j] + A[k]) % 3 == 0.
First Iteration (i=0):
    - `i` is 0, j in the inner loop is 1, 2, 3, 4 and 5.
    - A[i]=1: compare with A[j] and A[k] in the inner loop.
    - A[j]=2, A[k]=3: (A[i] + A[j] + A[k]) % 3 == 0 is False, the if branch is not taken.
    - A[j]=2, A[k]=4: (A[i] + A[j] + A[k]) % 3 == 0 is False, the if branch is not taken.
    - A[j]=2, A[k]=5: (A[i] + A[j] + A[k]) % 3 == 0 is False, the if branch is not taken.
    - A[j]=3, A[k]=4: (A[i] + A[j] + A[k]) % 3 == 0 is False, the if branch is not taken.
    - A[j]=3, A[k]=5: (A[i] + A[j] + A[k]) % 3 == 0 is False, the if branch is not taken.
    - A[j]=4, A[k]=5: (A[i] + A[j] + A[k]) % 3 == 0 is False, the if branch is not taken.
Second Iteration (i=1):
    - `i` is 1, j in the inner loop is 2, 3, 4 and 5.
    - A[i]=2: compare with A[j] and A[k] in the inner loop.
    - A[j]=3, A[k]=4: (A[i] + A[j] + A[k]) % 3 == 0 is False, the if branch is not taken.
    - A[j]=3, A[k]=5: (A[i] + A[j] + A[k]) % 3 == 0 is False, the if branch is not taken.
    - A[j]=4, A[k]=5: (A[i] + A[j] + A[k]) % 3 == 0 is False, the if branch is not taken.
Third Iteration (i=2):
    - `i` is 2, j in the inner loop is 3, 4 and 5.
    - A[i]=3: compare with A[j] and A[k] in the inner loop.
    - A[j]=4, A[k]=5: (A[i] + A[j] + A[k]) % 3 == 0 is False, the if branch is not taken.
Forth Iteration (i=3):
    - `i` is 3, j in the inner loop is 4 and 5.
    - A[i]=4: compare with A[j] and A[k] in the inner loop.
    - A[j]=5: (A[i] + A[j] + A[k]) % 3 == 0 is False, the if branch is not taken.
Fifth Iteration (i=4):
    - `i` is 4, j in the inner loop is 5.
    - A[i]=5: compare with A[j] and A[k] in the inner loop.
    - A[j]=5: (A[i] + A[j] + A[k]) % 3 == 0 is False, the if branch is not taken.
Sixth iteration (i=5):
    No more elements to compare.
