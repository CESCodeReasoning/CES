from typing import *


def triples_sum_to_zero(l: list):
    for i in range(len(l)): ## [STATE]i=[0, 1, 2, 3, 4][/STATE][STATE]range(len(l))=[0, 1, 2, 3, 4][/STATE][STATE]len(l)=[4][/STATE]
        for j in range(i + 1, len(l)): ## [STATE]j=[1, 2, 3, 4, 2, 3, 4, 3, 4, 4][/STATE][STATE]range((i + 1), len(l))=[[1, 2, 3, 4], [2, 3, 4], [3, 4], [4], [2, 3, 4], [3, 4], [4], [3, 4], [4], [4]][/STATE][STATE](i + 1)=[1, 2, 3, 4, 2, 3, 4, 3, 4, 4][/STATE][STATE]len(l)=[4][/STATE]
            for k in range(j + 1, len(l)): ## [STATE]k=[1, 2, 3, 4, 2, 3, 4, 3, 4, 4, 2, 3, 4, 3, 4, 4, 3, 4, 4, 4][/STATE][STATE]range((j + 1), len(l))=[[1, 2, 3, 4], [2, 3, 4], [3, 4], [4], [2, 3, 4], [3, 4], [4], [3, 4], [4], [4], [2, 3, 4], [3, 4], [4], [3, 4], [4], [4], [3, 4], [4], [4], [4]][/STATE][STATE](j + 1)=[1, 2, 3, 4, 2, 3, 4, 3, 4, 4, 2, 3, 4, 3, 4, 4, 3, 4, 4, 4][/STATE][STATE]len(l)=[4][/STATE]
                if l[i] + l[j] + l[k] == 0: ## [CONDITION](l[i] + l[j] + l[k] == 0)=[False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False][/CONDITION][BRANCH]taken=[F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F][/BRANCH]
                    return True
    return False
