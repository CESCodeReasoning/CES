[REASONING]
The function `pluck` is called with ( arr = [4,2,3] ).
The length of the array is not 0, so the first if branch is not taken.
The list comprehension filters out the even numbers from the array, resulting in [4,2].
The list of even numbers is not empty, so the second if branch is not taken.
The minimum value of the even numbers is 2, and its index in the original array is 1.
Therefore, the function returns [2, 1].

[ANSWER]
from typing import *
def pluck(arr):
    if(len(arr) == 0): return [] ## [CONDITION](len(arr) == 0)=[False][/CONDITION][BRANCH]taken=[N][/BRANCH]
    evens = list(filter(lambda x: x%2 == 0, arr))
    if(evens == []): return [] ## [CONDITION](evens == [])=[False][/CONDITION][BRANCH]taken=[N][/BRANCH]
    return [min(evens), arr.index(min(evens))]
[/ANSWER]

[OUTPUT]
[2, 1]
[/OUTPUT]