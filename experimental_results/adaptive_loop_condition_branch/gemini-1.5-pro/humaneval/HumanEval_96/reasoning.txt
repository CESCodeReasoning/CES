The function count_up_to(n) takes an integer n as its parameter.
It initializes an empty list called primes to store the prime numbers found.
The outer loop iterates through all the numbers from 2 to n-1.
For each number i in the outer loop, the inner loop iterates through all the numbers from 2 to i-1 to check if i is divisible by any of them.
If i is divisible by any number in the inner loop, then it is not a prime number and the is_prime flag is set to False.
If i is not divisible by any number in the inner loop, then it is a prime number and is added to the primes list.
Finally, the function returns the primes list.
First Iteration (i=2):
    - `i` is 2, j in the inner loop is 2.
    - Check if 2 is divisible by 2:
        - 2 is divisible by 2, so is_prime is set to False.
Second Iteration (i=3):
    - `i` is 3, j in the inner loop is 2.
    - Check if 3 is divisible by 2:
        - 3 is not divisible by 2, so is_prime is still True.
    - Append 3 to primes.
Third Iteration (i=4):
    - `i` is 4, j in the inner loop is 2, 3.
    - Check if 4 is divisible by 2, 3:
        - 4 is divisible by 2, so is_prime is set to False.
Forth Iteration (i=5):
    - `i` is 5, j in the inner loop is 2, 3, 4.
    - Check if 5 is divisible by 2, 3, 4:
        - 5 is not divisible by 2, 3, 4, so is_prime is still True.
    - Append 5 to primes.
