The function `search` is called with ( lst = [2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1] ).
Inside the function, a list `frq` is initialized with zeros of length ( max(lst) + 1 ).
The loop iterates over the elements of `lst` and increments the corresponding index in `frq`.
After the loop, the variable `ans` is initialized to -1.
The second loop iterates over the indices of `frq` from 1 to `len(frq)`.
For each index `i`, it checks if `frq[i] >= i`.
If the condition is true, it updates `ans` to `i`.
Finally, the function returns `ans`.

Iteration 1:
    - `i` is 2, and `frq[2]` is incremented to 1.
Iteration 2:
    - `i` is 7, and `frq[7]` is incremented to 1.
Iteration 3:
    - `i` is 8, and `frq[8]` is incremented to 1.
Iteration 4:
    - `i` is 8, and `frq[8]` is incremented to 2.
Iteration 5:
    - `i` is 4, and `frq[4]` is incremented to 1.
Iteration 6:
    - `i` is 8, and `frq[8]` is incremented to 3.
Iteration 7:
    - `i` is 7, and `frq[7]` is incremented to 2.
Iteration 8:
    - `i` is 3, and `frq[3]` is incremented to 1.
Iteration 9:
    - `i` is 9, and `frq[9]` is incremented to 1.
Iteration 10:
    - `i` is 6, and `frq[6]` is incremented to 1.
Iteration 11:
    - `i` is 5, and `frq[5]` is incremented to 1.
Iteration 12:
    - `i` is 10, and `frq[10]` is incremented to 1.
Iteration 13:
    - `i` is 4, and `frq[4]` is incremented to 2.
Iteration 14:
    - `i` is 3, and `frq[3]` is incremented to 2.
Iteration 15:
    - `i` is 6, and `frq[6]` is incremented to 2.
Iteration 16:
    - `i` is 7, and `frq[7]` is incremented to 3.
Iteration 17:
    - `i` is 1, and `frq[1]` is incremented to 1.
Iteration 18:
    - `i` is 7, and `frq[7]` is incremented to 4.
Iteration 19:
    - `i` is 4, and `frq[4]` is incremented to 3.
Iteration 20:
    - `i` is 10, and `frq[10]` is incremented to 2.
Iteration 21:
    - `i` is 8, and `frq[8]` is incremented to 4.
Iteration 22:
    - `i` is 1, and `frq[1]` is incremented to 2.

The second loop starts:
Iteration 1:
    - `i` is 1, and `frq[1]` is 2, which is greater than or equal to 1, so `ans` is updated to 1.
Iteration 2:
    - `i` is 2, and `frq[2]` is 1, which is less than 2, so `ans` remains 1.
Iteration 3:
    - `i` is 3, and `frq[3]` is 2, which is greater than or equal to 3, so `ans` is updated to 3.
Iteration 4:
    - `i` is 4, and `frq[4]` is 3, which is greater than or equal to 4, so `ans` is updated to 4.
Iteration 5:
    - `i` is 5, and `frq[5]` is 1, which is less than 5, so `ans` remains 4.
Iteration 6:
    - `i` is 6, and `frq[6]` is 2, which is less than 6, so `ans` remains 4.
Iteration 7:
    - `i` is 7, and `frq[7]` is 4, which is greater than or equal to 7, so `ans` is updated to 7.
Iteration 8:
    - `i` is 8, and `frq[8]` is 4, which is greater than or equal to 8, so `ans` is updated to 8.
Iteration 9:
    - `i` is 9, and `frq[9]` is 1, which is less than 9, so `ans` remains 8.
Iteration 10:
    - `i` is 10, and `frq[10]` is 2, which is less than 10, so `ans` remains 8.

The function returns `ans`, which is 8.
