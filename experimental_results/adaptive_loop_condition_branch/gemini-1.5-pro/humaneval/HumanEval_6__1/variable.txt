from typing import *


def parse_nested_parens(paren_string: str) -> List[int]:
    def parse_paren_group(s):
        depth = 0
        max_depth = 0
        for c in s: ## [STATE]c=['(', '(', ')', '(', ')', ')', '(', ')', ')', ')', ')', ')'][/STATE][STATE]s=['(()(())((())))'][/STATE]
            if c == '(': ## [CONDITION](c == '(')=[True, True, False, True, False, False, True, False, False, False, False, False][/CONDITION][BRANCH]taken=[Y, Y, N, Y, N, N, Y, N, N, N, N, N][/BRANCH]
                depth += 1
                max_depth = max(depth, max_depth)
            else: ## [BRANCH]taken=[N, N, Y, N, Y, Y, N, Y, Y, Y, Y, Y][/BRANCH]
                depth -= 1

        return max_depth

    return [parse_paren_group(x) for x in paren_string.split(' ') if x]
