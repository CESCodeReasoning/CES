[REASONING]
The function `by_length` is called with (arr = [] ).
Inside the function, a dictionary `dic` is defined to map numbers to their corresponding string representations.
A new list `sorted_arr` is created by sorting the input list `arr` in descending order.
An empty list `new_arr` is created to store the string representations of the numbers in `sorted_arr`.
The loop iterates over the elements in `sorted_arr`.
First Iteration (var = 0):
    `var` is not a key in the `dic` dictionary, so the `except` block is executed and nothing is added to `new_arr`.
[/REASONING]

[ANSWER]
from typing import *


def by_length(arr):
    dic = {
        1: "One",
        2: "Two",
        3: "Three",
        4: "Four",
        5: "Five",
        6: "Six",
        7: "Seven",
        8: "Eight",
        9: "Nine",
    }
    sorted_arr = sorted(arr, reverse=True)
    new_arr = []
    for var in sorted_arr: ## [STATE]sorted_arr=[0][/STATE]
        try:
            new_arr.append(dic[var])
        except BaseException:
            pass
    return new_arr
[/ANSWER]

[OUTPUT]
[]
[/OUTPUT]