[REASONING]
The function `maximum` is called with ( arr = [-3, 2, 1, 2, -1, -2, 1], k = 1 ).
The condition `k == 0` is false, so the if branch is not taken.
The array `arr` is sorted in ascending order, resulting in `[-3, -2, -1, 1, 1, 2, 2]`.
The last `k` elements of the sorted array are taken, resulting in `[2]`.
The function returns the list `[2]`.

Therefore, the final output of the function `maximum([-3, 2, 1, 2, -1, -2, 1], 1)` is `[2]`.
[/REASONING]

[ANSWER]
from typing import *


def maximum(arr, k):
    if k == 0: ## [CONDITION](k == 0)=[False][/CONDITION][BRANCH]taken=[N][/BRANCH]
        return []
    arr.sort()
    ans = arr[-k:]
    return ans
[/ANSWER]

[OUTPUT]
[2]
[/OUTPUT]