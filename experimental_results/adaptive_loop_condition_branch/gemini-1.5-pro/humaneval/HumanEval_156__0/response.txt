[REASONING]
The function `int_to_mini_roman` is called with ( number = 900 ).
Inside the function, two lists `num` and `sym` are initialized with corresponding values.
The variable `i` is initialized to 12.
The variable `res` is initialized to an empty string.
First Iteration:
    - number = 900, num[i] = 1000, div = 0.
    - number = 900, num[i] = 900, div = 1.
    - div = 1, res = "M".
    - div = 0, i = 11.
Second Iteration:
    - number = 0, num[i] = 500, div = 0.
    - number = 0, num[i] = 400, div = 0.
    - number = 0, num[i] = 100, div = 0.
    - number = 0, num[i] = 90, div = 0.
    - number = 0, num[i] = 50, div = 0.
    - number = 0, num[i] = 40, div = 0.
    - number = 0, num[i] = 10, div = 0.
    - number = 0, num[i] = 9, div = 0.
    - number = 0, num[i] = 5, div = 0.
    - number = 0, num[i] = 4, div = 0.
    - number = 0, num[i] = 1, div = 0.
The while loop terminates. The function returns the value of `res`, which is now "M".
[/REASONING]

[ANSWER]
from typing import *


def int_to_mini_roman(number):
    num = [1, 4, 5, 9, 10, 40, 50, 90,
           100, 400, 500, 900, 1000]
    sym = ["I", "IV", "V", "IX", "X", "XL",
           "L", "XC", "C", "CD", "D", "CM", "M"]
    i = 12
    res = ''
    while number: ## [STATE]number=[900, 0][/STATE]
        div = number // num[i]
        number %= num[i]
        while div: ## [STATE]div=[1, 0][/STATE]
            res += sym[i]
            div -= 1
        i -= 1
    return res.lower()
[/ANSWER]

[OUTPUT]
m
[/OUTPUT]