from typing import *


def has_close_elements(numbers: List[float], threshold: float) -> bool:
    for idx, elem in enumerate(numbers): ## [STATE]idx=[0, 1, 2, 3, 4][/STATE][STATE]elem=[1.1, 2.2, 3.1, 4.1, 5.1][/STATE][STATE]enumerate(numbers)=[[0, 1.1], [1, 2.2], [2, 3.1], [3, 4.1], [4, 5.1]][/STATE][STATE]numbers=[[1.1, 2.2, 3.1, 4.1, 5.1]][/STATE]
        for idx2, elem2 in enumerate(numbers): ## [STATE]idx2=[1, 2, 3, 4, 5, 2, 3, 4, 5, 3, 4, 5, 4, 5, 5][/STATE][STATE]elem2=[2.2, 3.1, 4.1, 5.1, 1.1, 3.1, 4.1, 5.1, 2.2, 4.1, 5.1, 3.1, 5.1, 4.1, 5.1][/STATE][STATE]enumerate(numbers)=[[1, 2.2], [2, 3.1], [3, 4.1], [4, 5.1], [5, 1.1], [2, 3.1], [3, 4.1], [4, 5.1], [5, 2.2], [3, 4.1], [4, 5.1], [5, 3.1], [4, 5.1], [5, 4.1], [5, 5.1]][/STATE][STATE]numbers=[[1.1, 2.2, 3.1, 4.1, 5.1]][/STATE]
            if idx != idx2: ## [CONDITION](idx != idx2)=[True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True][/CONDITION][BRANCH]taken=[Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y][/BRANCH]
                distance = abs(elem - elem2)
                if distance < threshold: ## [CONDITION](distance < threshold)=[True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True][/CONDITION][BRANCH]taken=[Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y][/BRANCH]
                    return True

    return False
