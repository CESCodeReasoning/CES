from typing import *
def minPath(grid, k):
    n = len(grid) ## [STATE]n=3[/STATE]
    val = n * n + 1 ## [STATE]val=10[/STATE]
    for i in range(n): ## [STATE]i=[0, 1, 2][/STATE][STATE]range(n)=[0, 1, 2][/STATE][STATE]n=3[/STATE]
        for j in range(n): ## [STATE]j=[0, 1, 2][/STATE][STATE]range(n)=[0, 1, 2][/STATE][STATE]n=3[/STATE]
            if grid[i][j] == 1: ## [CONDITION](grid[i][j] == 1)=[True, False, False, False, False, False, False, False, False][/CONDITION][BRANCH]taken=[Y, N, N, N, N, N, N, N, N][/BRANCH]
                temp = []
                if i != 0: ## [CONDITION](i != 0)=[False][/CONDITION][BRANCH]taken=[N][/BRANCH]
                    temp.append(grid[i - 1][j])

                if j != 0: ## [CONDITION](j != 0)=[False][/CONDITION][BRANCH]taken=[N][/BRANCH]
                    temp.append(grid[i][j - 1])

                if i != n - 1: ## [CONDITION](i != n - 1)=[True][/CONDITION][BRANCH]taken=[Y][/BRANCH]
                    temp.append(grid[i + 1][j])

                if j != n - 1: ## [CONDITION](j != n - 1)=[True][/CONDITION][BRANCH]taken=[Y][/BRANCH]
                    temp.append(grid[i][j + 1])

                val = min(temp) ## [STATE]temp=[2, 4][/STATE][STATE]val=2[/STATE]

    ans = []
    for i in range(k): ## [STATE]i=[0, 1, 2][/STATE][STATE]range(k)=[0, 1, 2][/STATE][STATE]k=3[/STATE]
        if i % 2 == 0: ## [CONDITION](i % 2 == 0)=[True, False, True][/CONDITION][BRANCH]taken=[Y, N, Y][/BRANCH]
            ans.append(1)
        else: ## [BRANCH]taken=[N, Y, N][/BRANCH]
            ans.append(val)
    return ans
