from typing import *
import math

def poly(xs: list, x: float):
    return sum([coeff * math.pow(x, i) for i, coeff in enumerate(xs)])

def find_zero(xs: list):
    begin, end = -1., 1.
    while poly(xs, begin) * poly(xs, end) > 0: ## [STATE](poly(xs, begin) * poly(xs, end))=[-24*0, -24*0, ...][/STATE]
        begin *= 2.0
        end *= 2.0
    while end - begin > 1e-10: ## [STATE](end - begin)=[2.0, 1.0, 0.5, 0.25, 0.125, 0.0625, 0.03125, 0.015625, 0.0078125, 0.00390625, 0.001953125, 0.0009765625, 0.00048828125, 0.000244140625, 0.0001220703125, 0.00006103515625, 0.000030517578125, 0.0000152587890625, 0.00000762939453125, 0.000003814697265625, 0.0000019073486328125, 0.00000095367431640625, 0.000000476837158203125, 0.0000002384185791015625, 0.00000011920928955078125, 0.000000059604644775390625, 0.0000000298023223876953125, 0.00000001490116119384765625, 0.000000007450580596923828125, 0.0000000037252902984619140625, 0.00000000186264514923095703125, 0.000000000931322574615478515625, 0.0000000004656612873077392578125, 0.00000000023283064365386962890625, 0.000000000116415