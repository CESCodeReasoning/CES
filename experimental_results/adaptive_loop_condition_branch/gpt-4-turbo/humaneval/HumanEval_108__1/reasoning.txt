The function `count_nums` is called with the list `[1, 6, 9, -6, 0, 1, 5]`.
The function contains a nested function `digits_sum` which calculates the sum of the digits of a number, adjusting for negative numbers by making the first digit negative.

1. For each number in the array:
   - `1`: It's positive, so `digits_sum(1)` returns `1`.
   - `6`: It's positive, so `digits_sum(6)` returns `6`.
   - `9`: It's positive, so `digits_sum(9)` returns `9`.
   - `-6`: It's negative, so `digits_sum(-6)` returns `-6` (first digit `-6`).
   - `0`: It's zero (considered non-negative), so `digits_sum(0)` returns `0`.
   - `1`: It's positive, so `digits_sum(1)` returns `1`.
   - `5`: It's positive, so `digits_sum(5)` returns `5`.

2. The list comprehension `[digits_sum(i) for i in arr]` results in `[1, 6, 9, -6, 0, 1, 5]`.

3. The `filter` function is used to count how many numbers in the list are greater than `0`. The numbers greater than `0` are `[1, 6, 9, 1, 5]`.

4. The `len` function then counts these numbers, resulting in `5`.

Therefore, the final output of the function `count_nums([1, 6, 9, -6, 0, 1, 5])` is `5`.
