from typing import *
def even_odd_palindrome(n):
    def is_palindrome(n):
        return str(n) == str(n)[::-1]

    even_palindrome_count = 0
    odd_palindrome_count = 0

    for i in range(1, n+1): ## [STATE]range(1, (n + 1))=[1 to 123][/STATE][STATE](n + 1)=124[/STATE]
        if i % 2 == 1 and is_palindrome(i): ## [CONDITION](i % 2 == 1 and is_palindrome(i))=[True for odd palindromes][/CONDITION][CONDITION](i % 2 == 1)=[True for odd numbers][/CONDITION][CONDITION](is_palindrome(i))=[True for palindromes][/CONDITION][BRANCH]taken=[Y for odd palindromes, N otherwise][/BRANCH]
            odd_palindrome_count += 1
        elif i % 2 == 0 and is_palindrome(i): ## [CONDITION](i % 2 == 0 and is_palindrome(i))=[True for even palindromes][/CONDITION][CONDITION](i % 2 == 0)=[True for even numbers][/CONDITION][CONDITION](is_palindrome(i))=[True for palindromes][/CONDITION][BRANCH]taken=[Y for even palindromes, N otherwise][/BRANCH]
            even_palindrome_count += 1
    return (even_palindrome_count, odd_palindrome_count)
