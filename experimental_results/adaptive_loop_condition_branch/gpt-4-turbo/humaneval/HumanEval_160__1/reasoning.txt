The function `do_algebra` is called with `operator = ['+', '*', '-']` and `operand = [2, 3, 4, 5]`.
Inside the function, a variable `expression` is initialized to the string representation of the first element of `operand`, which is '2'.
The `zip` function pairs each element from `operator` with each element from `operand[1:]`. Thus, `zip(operator, operand[1:])` results in pairs: `('+', 3)`, `('*', 4)`, and `('-', 5)`.
The loop iterates over these pairs:
First Iteration (oprt = '+', oprn = 3):
    `expression` becomes '2' + '+' + '3' which results in '2+3'.
Second Iteration (oprt = '*', oprn = 4):
    `expression` becomes '2+3' + '*' + '4' which results in '2+3*4'.
Third Iteration (oprt = '-', oprn = 5):
    `expression` becomes '2+3*4' + '-' + '5' which results in '2+3*4-5'.
After constructing the full expression '2+3*4-5', the `eval` function evaluates this string as a mathematical expression, resulting in 2 + 12 - 5 = 9.
