The function `solution` takes a list `lst` as input and returns the sum of all odd numbers that are located at even indices in the list. The indices in Python are zero-based, meaning the first element is at index 0 (even), the second at index 1 (odd), and so on.

For the input list [2, 4, 8]:
1. The list comprehension iterates over the list with `enumerate` to get both the index and the value.
2. It checks two conditions for each element: whether the index is even (`idx % 2 == 0`) and whether the element itself is odd (`x % 2 == 1`).
3. For the element 2 at index 0: index is even, but the number is even. So, it does not satisfy the second condition.
4. For the element 4 at index 1: index is odd. It does not satisfy the first condition.
5. For the element 8 at index 2: index is even, but the number is even. So, it does not satisfy the second condition.
6. No elements satisfy both conditions, so the list comprehension returns an empty list.
7. The `sum` function then sums up the elements of this empty list, resulting in 0.

Thus, the output of the function `solution` when called with the input [2, 4, 8] is 0.
