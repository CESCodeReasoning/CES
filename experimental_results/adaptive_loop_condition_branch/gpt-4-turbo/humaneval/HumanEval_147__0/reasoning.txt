The function `get_max_triples(n)` is designed to find all unique triples `(i, j, k)` where `i < j < k` and the sum of the values `A[i] + A[j] + A[k]` is divisible by 3. The list `A` is generated using the formula `i * i - i + 1` for each `i` from 1 to `n`.

Here's a breakdown of the function's execution for `n = 100`:
1. The list `A` is generated with 100 elements where each element is calculated as `i * i - i + 1`.
2. The function then iterates over all possible triples `(i, j, k)` where `i < j < k` using three nested loops.
3. For each triple, it checks if the sum `A[i] + A[j] + A[k]` is divisible by 3.
4. If the condition is met, the triple is added to the list `ans`.
5. Finally, the function returns the count of such triples.

The loops iterate as follows:
- The outer loop (`i`) runs from 0 to 98.
- The middle loop (`j`) starts from `i+1` and runs up to 99.
- The innermost loop (`k`) starts from `j+1` and runs up to 99.

The condition checks if `(A[i] + A[j] + A[k]) % 3 == 0`. If true, the triple is considered valid and added to the result list `ans`.

The function finally returns the length of `ans`, which is the count of all valid triples.
