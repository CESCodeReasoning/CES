[REASONING]
The function `string_to_md5` takes a string `text` as input. It first checks if `text` is not empty. If `text` is not empty, it encodes the string into ASCII format and then computes its MD5 hash using the `hashlib.md5()` method. The result is then converted to a hexadecimal format using the `hexdigest()` method. If `text` is empty, the function returns `None`.

For the input 'A B C', the function will:
1. Check if 'A B C' is not empty. Since it is not, it proceeds to the next step.
2. Encode 'A B C' into ASCII format.
3. Compute the MD5 hash of the encoded string.
4. Convert the hash to a hexadecimal string format.
5. Return the hexadecimal string.

Thus, the output will be the MD5 hash of 'A B C' in hexadecimal format.
[REASONING]

[ANSWER]
```python
from typing import *

def string_to_md5(text):
    import hashlib
    # [STATE] text = 'A B C' [/STATE]
    # [CONDITION] text is not None and text != '' [/CONDITION]
    # [BRANCH] Y [/BRANCH]
    return hashlib.md5(text.encode('ascii')).hexdigest() if text else None
    # [BRANCH] N [/BRANCH]
```
[/ANSWER]

[OUTPUT]
"688787d8ff144e3c4383172a9e4b3b0e"
[/OUTPUT]