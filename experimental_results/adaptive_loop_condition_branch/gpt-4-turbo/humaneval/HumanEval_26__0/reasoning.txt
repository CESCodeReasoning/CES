The function `remove_duplicates` takes a list of integers as input and aims to return a new list with all duplicates removed. The function uses the `collections.Counter` to count the occurrences of each number in the input list. A list comprehension is then used to construct a new list containing only those numbers that appear exactly once in the original list.

For the input `[1, 2, 3, 4]`, the steps are as follows:
1. The `Counter` object `c` is created from the list, resulting in `Counter({1: 1, 2: 1, 3: 1, 4: 1})` since all elements appear exactly once.
2. The list comprehension iterates over the original list `numbers` and checks if each number `n` has a count of `1` in the `Counter` object `c`.
3. Since all numbers have a count of `1`, all numbers are included in the resulting list.

Thus, the output for the input `[1, 2, 3, 4]` is `[1, 2, 3, 4]`.
