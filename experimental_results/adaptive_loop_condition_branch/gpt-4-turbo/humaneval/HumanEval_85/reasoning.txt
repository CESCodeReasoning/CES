The function `add` takes a list `lst` as input and returns the sum of elements that are at odd indices and are even numbers. The function uses list comprehension to generate a new list containing elements that meet these criteria, and then sums up the elements of this new list.

For the input `[4, 88]`:
1. The list comprehension iterates over the indices of the list `lst`. The `range(1, len(lst), 2)` generates indices starting from 1 up to the length of the list, stepping by 2. This means it only considers elements at odd indices.
2. For the input `[4, 88]`, the length of the list is 2. The range will generate only one index: 1.
3. The element at index 1 is `88`.
4. The condition `lst[i] % 2 == 0` checks if the element at the odd index is even. In this case, `88 % 2 == 0` is true.
5. Since the condition is true, `88` is included in the new list generated by the list comprehension.
6. The sum of the new list, which contains just `[88]`, is `88`.

Thus, the output of the function `add` when called with the input `[4, 88]` is `88`.
