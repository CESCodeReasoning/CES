[REASONING]
The function `sum_squares` is called with the list `lst = [-2.4, 1, 1]`.
Inside the function, a variable `squared` is initialized to 0.
The loop iterates over each element in the list `lst`.

First Iteration (i = -2.4):
    `math.ceil(i)` computes the ceiling of -2.4, which is -2.
    `(-2)**2` computes the square of -2, which is 4.
    `squared += 4` updates `squared` to 4 (0 + 4 = 4).

Second Iteration (i = 1):
    `math.ceil(i)` computes the ceiling of 1, which is 1.
    `1**2` computes the square of 1, which is 1.
    `squared += 1` updates `squared` to 5 (4 + 1 = 5).

Third Iteration (i = 1):
    `math.ceil(i)` computes the ceiling of 1, which is 1.
    `1**2` computes the square of 1, which is 1.
    `squared += 1` updates `squared` to 6 (5 + 1 = 6).

After the loop completes, the function returns the value of `squared`, which is now 6.
[/REASONING]

[PYTHON]
from typing import *

def sum_squares(lst):
    import math
    squared = 0
    for i in lst: ## [STATE]i=[-2.4, 1, 1][/STATE][STATE]lst=[-2.4, 1, 1][/STATE]
        squared += math.ceil(i)**2
    return squared
[/PYTHON]

[OUTPUT]
6
[/OUTPUT]