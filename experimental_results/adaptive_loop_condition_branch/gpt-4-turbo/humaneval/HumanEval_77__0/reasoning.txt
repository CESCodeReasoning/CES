The function `iscube` checks whether a given integer `a` is a perfect cube. The steps are as follows:
1. The absolute value of `a` is taken to handle negative numbers, since the cube root of a negative number can also be a perfect cube (e.g., -8 is -2 cubed).
2. The cube root of the absolute value of `a` is calculated using `a ** (1. / 3)`.
3. This cube root is then rounded to the nearest integer using `round()`, and this integer is cubed again using `int(round(a ** (1. / 3))) ** 3`.
4. The result of this cubing is compared to the original absolute value of `a` to check if it equals `a`. If they are equal, `a` is a perfect cube, and the function returns `True`. Otherwise, it returns `False`.

For the input `2`, the function will:
- Take the absolute value of `2`, which is `2`.
- Calculate the cube root of `2`, which is approximately `1.2599210498948732`.
- Round this value to the nearest integer, which is `1`.
- Cube `1` to get `1`.
- Compare `1` with the original `2`. Since they are not equal, `2` is not a perfect cube.
- Return `False`.
