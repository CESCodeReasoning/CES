The function `is_nested` is called with the input string '[][][[]]'.
The function initializes two lists: `opening_bracket_index` and `closing_bracket_index` to keep track of the indices of opening and closing brackets respectively.

Iteration over the string:
- For each character in the string, the function checks if it is an opening bracket '['.
- If it is, the index is added to `opening_bracket_index`.
- If it is not, the index is added to `closing_bracket_index`.

After iterating through the string:
- The indices in `opening_bracket_index` are [0, 2, 5, 6].
- The indices in `closing_bracket_index` are [1, 3, 4, 7], which is then reversed to [7, 4, 3, 1].

Next, the function checks if there are nested brackets:
- It initializes a counter `cnt` to 0 and an index `i` to 0.
- It iterates over each index in `opening_bracket_index`.
- For each index, it checks if there is a corresponding closing bracket that comes after the opening bracket by comparing the current opening bracket index with the corresponding index in the reversed `closing_bracket_index`.
- If the condition is true, it increments the counter `cnt` and the index `i`.

Finally, the function checks if the counter `cnt` is greater than or equal to 2, indicating that there are at least two nested brackets.

In this case, the function finds that there are indeed nested brackets, and thus returns `True`.
