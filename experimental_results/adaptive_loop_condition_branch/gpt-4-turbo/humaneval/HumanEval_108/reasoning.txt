The function `count_nums` is called with the list `[1, 1, 2, -2, 3, 4, 5]`.

1. The function defines a nested function `digits_sum` which calculates the sum of the digits of a number, adjusting for negative numbers by making the first digit negative if the original number was negative.

2. For each number in the array:
   - For `1` and `1`: The number is positive, so `neg` remains `1`. The digits are `[1]`, and the sum is `1`.
   - For `2`: The number is positive, so `neg` remains `1`. The digits are `[2]`, and the sum is `2`.
   - For `-2`: The number is negative, so `neg` becomes `-1`, and the number is converted to `2`. The digits are `[2]`, but the first digit is made negative, resulting in `[-2]`. The sum is `-2`.
   - For `3`: The number is positive, so `neg` remains `1`. The digits are `[3]`, and the sum is `3`.
   - For `4`: The number is positive, so `neg` remains `1`. The digits are `[4]`, and the sum is `4`.
   - For `5`: The number is positive, so `neg` remains `1`. The digits are `[5]`, and the sum is `5`.

3. The list of sums is `[1, 1, 2, -2, 3, 4, 5]`.

4. The `filter` function is used to count how many of these sums are greater than `0`. The sums greater than `0` are `[1, 1, 2, 3, 4, 5]`, which are 6 numbers.

Therefore, the final output of the function `count_nums([1, 1, 2, -2, 3, 4, 5])` is `6`.
