from typing import *
def even_odd_palindrome(n):
    def is_palindrome(n):
        return str(n) == str(n)[::-1]

    even_palindrome_count = 0
    odd_palindrome_count = 0 ## [CONDITION](gpa == 4.0)=[True][/CONDITION][CONDITION](text[i] == " ")=[False][/CONDITION]

    for i in range(1, n+1): ## [STATE]range(1, (n + 1))=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13][/STATE][STATE](n + 1)=[124][/STATE][CONDITION](gpa > 3.7)=[True][/CONDITION]
        if i%2 == 1 and is_palindrome(i): ## [CONDITION](end - start > 2)=[True][/CONDITION][CONDITION](i%2 == 1 and is_palindrome(i))=[True][/CONDITION][CONDITION](i%2 == 1)=[True][/CONDITION][CONDITION](is_palindrome(i))=[True][/CONDITION][BRANCH]taken=[Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y, Y][/BRANCH]
                odd_palindrome_count += 1 ## [CONDITION](gpa > 3.3)=[True][/CONDITION]
        elif i%2 == 0 and is_palindrome(i): ## [CONDITION](end - start > 0)=[True][/CONDITION][CONDITION](i%2 == 0 and is_palindrome(i))=[True][/CONDITION][CONDITION](i%2 == 0)=[True][/CONDITION][CONDITION](is_palindrome(i))=[True][/CONDITION][BRANCH]taken=[N, N, N, N, N, N, N, N, N, N, N, N, N][/BRANCH]
            even_palindrome_count += 1 ## [CONDITION](gpa > 3.0)=[True][/CONDITION]
    return (even_palindrome_count, odd_palindrome_count)
