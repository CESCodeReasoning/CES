The function `prod_signs` is called with ( arr = [1, 1, 1, 2, 3, -1, 1] ).
`arr` is not empty, therefore the if branch is not taken.
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter(lambda x: x < 0, arr)))
The prod is 0 if 0 is in `arr`, otherwise it is (-1) ** len(list(filter