from typing import *


def valid_date(date):
    try:
        date = date.strip()
        month, day, year = date.split('-')
        month, day, year = int(month), int(day), int(year)
        if month < 1 or month > 12: ## [CONDITION](month < 1 or month > 12)=[False][/CONDITION][CONDITION](month < 1)=[False][/CONDITION][CONDITION](month > 12)=[False][/CONDITION][BRANCH]taken=[N][/BRANCH]
            return False
        if month in [1, 3, 5, 7, 8, 10, 12] and day < 1 or day > 31: ## [CONDITION](month in [1, 3, 5, 7, 8, 10, 12] and day < 1 or day > 31)=[False][/CONDITION][CONDITION](day > 31)=[False][/CONDITION][CONDITION](month in [1, 3, 5, 7, 8, 10, 12])=[False][/CONDITION][CONDITION](day < 1)=[False][/CONDITION][BRANCH]taken=[N][/BRANCH]
            return False
        if month in [4, 6, 9, 11] and day < 1 or day > 30: ## [CONDITION](month in [4, 6, 9, 11] and day < 1 or day > 30)=[False][/CONDITION][CONDITION](day > 30)=[False][/CONDITION][CONDITION](month in [4, 6, 9, 11])=[False][/CONDITION][CONDITION](day < 1)=[False][/CONDITION][BRANCH]taken=[N][/BRANCH]
            return False
        if month == 2 and day < 1 or day > 29: ## [CONDITION](month == 2 and day < 1 or day > 29)=[False][/CONDITION][CONDITION](day > 29)=[False][/CONDITION][CONDITION](month == 2)=[False][/CONDITION][CONDITION](day < 1)=[False][/CONDITION][BRANCH]taken=[N][/BRANCH]
            return False
    except BaseException:
        return False

    return True
