The function `string_xor` is called with ( a = '0101', b = '0000' ).
The function `xor` is called with ( i = '0', j = '0' ).
The condition `i == j` is true, therefore the if branch is taken and the method returns '0'
The function `xor` is called with ( i = '1', j = '0' ).
The condition `i == j` is false, therefore the else branch is taken and the method returns '1'
The function `xor` is called with ( i = '0', j = '0' ).
The condition `i == j` is true, therefore the if branch is taken and the method returns '0'
The function `xor` is called with ( i = '1', j = '0' ).
The condition `i == j` is false, therefore the else branch is taken and the method returns '1'
The function `xor` is called with ( i = '0', j = '0' ).
The condition `i == j` is true, therefore the if branch is taken and the method returns '0'
The function `xor` is called with ( i = '1', j = '0' ).
The condition `i == j` is false, therefore the else branch is taken and the method returns '1'
The function `xor` is called with ( i = '0', j = '0' ).
The condition `i == j` is true, therefore the if branch is taken and the method returns '0'
The function `xor` is called with ( i = '1', j = '0' ).
The condition `i == j` is false, therefore the else branch is taken and the method returns '1'
The function `xor` is called with ( i = '0', j = '0' ).
The condition `i == j` is true, therefore the if branch is taken and the method returns '0'
The function `xor` is called with ( i = '1', j = '0' ).
The condition `i == j` is false, therefore the else branch is taken and the method returns '1'
The function `xor` is called with ( i = '0', j = '0' ).
The condition `i == j` is true, therefore the if branch is taken and the method returns '0'
The function `xor` is called with ( i = '1', j = '0' ).
The condition `i == j` is false, therefore the else branch is taken and the method returns '1'
The function `xor` is called with ( i = '0', j = '0' ).
The condition `i == j` is true, therefore the if branch is taken and the method returns '0'
The function `xor` is called with ( i = '1', j = '0' ).
The condition `i == j` is false, therefore the else branch is taken and the method returns '1'
The function `xor` is called with ( i = '0', j = '0' ).
The condition `i == j` is true, therefore the if branch is taken and the method returns '0'
The function `xor` is called with ( i = '1', j = '0' ).
The condition `i == j` is false, therefore the else branch is taken and the method returns '1'
The function `xor` is called with ( i = '0', j = '0' ).
The condition `i == j` is true, therefore the if branch is taken and the method returns '0'
The function `xor` is called with ( i = '1', j = '0' ).
The condition `i == j` is false, therefore the else branch is taken and the method returns '1'
The function `xor` is called with ( i = '0', j = '0' ).
The condition `i == j` is true, therefore the if branch is taken and the method returns '0'
The function `xor` is called with ( i = '1', j = '0' ).
The condition `i == j` is false, therefore the else branch is taken and the method returns '1'
The function `xor` is called with ( i = '0', j = '0' ).
The condition `i == j` is true, therefore the if branch is taken and the method returns '0'
The function `xor` is called with ( i = '1', j = '0' ).
The condition `i == j` is false, therefore the else branch is taken and the method returns '1'
The function `xor` is called with ( i = '0', j = '0' ).
The condition `i == j` is true, therefore the if branch is taken and the method returns '0'
The function `xor` is called with ( i = '1', j = '0' ).
The condition `i == j` is false, therefore the else branch is taken and the method returns '1'
The function `xor` is called with ( i = '0', j = '0' ).
The condition `i == j` is true, therefore the if branch is taken and the method returns '0'
The function `xor` is called with ( i = '1', j = '0' ).
The condition `i == j` is false, therefore the else branch is taken and the method returns '1'
The function `xor` is called with ( i = '0', j = '0' ).
The condition `i == j` is true, therefore the if branch is taken and the method returns '0'
The function `xor` is called with ( i = '1', j = '0' ).
The condition `i == j` is false, therefore the else branch is taken and the method returns '1'
The function `xor` is called with ( i = '0', j = '0' ).
The condition `i == j` is true, therefore the if branch is taken and the method returns '0'
The function `xor` is called with ( i = '1', j = '0' ).
The condition `i == j` is false, therefore the else branch is taken and the method returns '1'
The function `xor` is called with ( i = '0', j = '0' ).
The condition `i == j` is true, therefore the if branch is taken and the method returns '0'
The function `xor` is called with ( i = '1', j = '0' ).
The condition `i == j` is false, therefore the else branch is taken and the method returns '1'
The function `xor` is called with ( i = '0', j = '0' ).
The condition `i == j` is true, therefore the if branch is taken and the method returns '0'
The function `xor` is called with ( i = '1', j = '0' ).
The condition `i == j` is false, therefore the else branch is taken and the method returns '1'
The function `xor` is called with ( i = '0', j = '0' ).
The condition `i == j` is true, therefore the if branch is taken and the method returns '0'
The function `xor` is called with ( i = '1', j = '0' ).
The condition `i == j` is false, therefore the else branch is taken and the method returns '1'
The function `xor` is called with ( i = '0', j = '0' ).
The condition `i == j` is true, therefore the if branch is taken and the method returns '0'
The function `xor` is called with ( i = '1', j = '0' ).
The condition `i == j` is false, therefore the else branch is taken and the method returns '1'
The function `xor` is called with ( i = '0', j = '0' ).
The condition `i == j` is true, therefore the if branch is taken and the method returns '0'
The function `xor` is called with ( i = '1', j = '0' ).
The condition `i == j` is false, therefore the else branch is taken and the method returns '1'
The function `xor` is called with ( i = '0', j = '0' ).
The condition `i == j` is true, therefore the if branch is taken and the method returns '0'
The function `xor` is called with ( i = '1', j = '0' ).
The condition `i == j` is false, therefore the else branch is taken and the method returns '1'
The function `xor` is called with ( i = '0', j = '0' ).
The condition `i == j` is true, therefore the if branch is taken and the method returns '0'
The function `xor` is called with ( i = '1', j = '0' ).
The condition `i == j` is false