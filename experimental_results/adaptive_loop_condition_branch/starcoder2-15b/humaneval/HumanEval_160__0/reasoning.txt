The function `do_algebra` is called with (operator = ['//', '*'], operand = [7, 3, 4]).
Inside the function, a variable `expression` is initialized to '7'.
`zip(operator, operand[1:])` returns a zip object that combines the elements of `operator` and `operand[1:]`.
`operator` = ['//', '*'] and `operand[1:]` = [3, 4]
The zip object returns a tuple of the corresponding elements from each list.
The loop iterates over the zip object and updates `expression` by concatenating the operator and operand.

First Iteration:
    oprt = '//'
    oprn = 3
    expression = '7' + '//' + '3' results in expression = '7//3'
Second Iteration:
    oprt = '*'
    oprn = 4
    expression = '7//3' + '*' + '4' results in expression = '7//3*4'

After the loop completes, the function returns the result of evaluating `expression` using the `eval` function.
