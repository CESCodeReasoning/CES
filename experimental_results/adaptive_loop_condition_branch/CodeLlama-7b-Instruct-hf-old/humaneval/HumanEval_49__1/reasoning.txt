The function `modp` is called with (n = 0, p = 101).
Inside the function, a variable `ret` is initialized to 1.
The loop iterates from 0 to n-1 since `range(n)` = [0, 1, 2, ..., n-1].

First Iteration(i = 0):
    ret = (2 * ret) % p
    ret = (2 * 1) % 101 = 2
Second Iteration(i = 1):
    ret = (2 * ret) % p
    ret = (2 * 2) % 101 = 4
Third Iteration(i = 2):
    ret = (2 * ret) % p
    ret = (2 * 4) % 101 = 8
Fourth Iteration(i = 3):
    ret = (2 * ret) % p
    ret = (2 * 8) % 101 = 16
Fifth Iteration(i = 4):
    ret = (2 * ret) % p
    ret = (2 * 16) % 101 = 32
...
...
...
Last Iteration(i = n-1):
    ret = (2 * ret) % p
    ret = (2 * (2^n-1)) % 101 = 2^n % 101

After the loop completes, the function returns the value of `ret`, which is now 2^n % 101.
