Buggy Code:
```python
from typing import List
def has_close_elements(numbers: List[float], threshold: float) -> bool:
    for idx, elem in enumerate(numbers):
        for idx2, elem2 in enumerate(numbers):
            if idx != idx2:
                distance = elem - elem2
                if distance < threshold:
                    return True

    return False
```

Fixed Code:
```python
from typing import List
def has_close_elements(numbers: List[float], threshold: float) -> bool:
    for idx, elem in enumerate(numbers):
        for idx2, elem2 in enumerate(numbers):
            if idx != idx2:
                distance = abs(elem - elem2)
                if distance < threshold:
                    return True

    return False
```

Buggy Code:
```python
def starts_one_ends(n):
    if n == 1: return 1
    return 18 * n * (10 ** (n - 2))
```

Fixed Code:
```python
def starts_one_ends(n):
    if n == 1: return 10
    return 18 * (10 ** (n - 2))
```
