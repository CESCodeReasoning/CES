The bug in the `has_close_elements` function is that it is not taking the absolute value of the distance between two numbers. This means that if the distance is negative, it will not be considered as close.

The bug in the `fix_spaces` function is that it does not handle the case when the last character in the string is a space. This is because the code does not check if the end index is less than the length of the string before it tries to access the character at that index.

Here is the fixed code:

```python
from typing import List
def has_close_elements(numbers: List[float], threshold: float) -> bool:
    for idx, elem in enumerate(numbers):
        for idx2, elem2 in enumerate(numbers):
            if idx != idx2:
                distance = abs(elem - elem2)
                if distance < threshold:
                    return True

    return False
```

```python
def fix_spaces(text):
    new_text = ""
    i = 0
    start, end = 0, 0
    while i < len(text):
        if text[i] == " ":
            end += 1
        else:
            if end - start > 2:
                new_text += "-"+text[i]
            elif end - start > 0:
                new_text += "_"*(end - start)+text[i]
            else:
                new_text += text[i]
            start, end = i+1, i+1
        i+=1
    if end - start > 2:
        new_text += "-"
    elif end - start > 0:
        new_text += "_"*(end - start)
    return new_text
```
