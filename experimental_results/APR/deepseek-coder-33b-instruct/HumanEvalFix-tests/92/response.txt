The bug in the `has_close_elements` function is that it is calculating the distance as `elem - elem2`, but it should be calculating the absolute distance as `abs(elem - elem2)`. This is because the distance between two numbers should always be a positive value, regardless of the order of subtraction.

The bug in the `any_int` function is that it is checking if `x`, `y`, and `z` are all integers, but it should be checking if `x`, `y`, and `z` are all integers or floats that are whole numbers. This is because the problem statement says that all numbers should be integers.

Here is the fixed code:

```python
from typing import List
def has_close_elements(numbers: List[float], threshold: float) -> bool:
    for idx, elem in enumerate(numbers):
        for idx2, elem2 in enumerate(numbers):
            if idx != idx2:
                distance = abs(elem - elem2)
                if distance < threshold:
                    return True

    return False
```

```python
def any_int(x, y, z):
    if isinstance(x,int) and isinstance(y,int) and isinstance(z,int):
        if (x+y==z) or (y+z==x) or (x+z==y):
            return True
        return False
    return False
```
