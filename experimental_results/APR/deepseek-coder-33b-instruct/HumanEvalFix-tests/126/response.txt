Fixed Code:
```python
def is_sorted(lst):
    count_digit = dict([(i, 0) for i in lst])
    for i in lst:
        count_digit[i]+=1
    if all(lst[i-1] <= lst[i] for i in range(1, len(lst))):
        return True
    else:
        return False
```

The bug in the original code is that it does not check if there are any duplicates in the list. The function should return False if there are any duplicates in the list.

Here is the corrected code:
```python
def is_sorted(lst):
    if len(lst) == len(set(lst)):
        if all(lst[i-1] <= lst[i] for i in range(1, len(lst))):
            return True
        else:
            return False
    else:
        return False
```

This code first checks if the length of the list is equal to the length of the set of the list. If they are not equal, it means there are duplicates in the list, so it returns False. If they are equal, it then checks if the list is sorted in ascending order. If it is, it returns True. If it is not, it returns False.
