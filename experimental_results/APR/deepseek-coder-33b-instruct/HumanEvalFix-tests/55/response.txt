The bug in the `has_close_elements` function is that it is calculating the distance as `elem - elem2`, but it should be `abs(elem - elem2)` to get the absolute difference.

The bug in the `fib` function is that it is returning `n` instead of the n-th Fibonacci number. It should return `fib(n - 1) + fib(n - 2)`.

Here is the fixed code:

```python
from typing import List

def has_close_elements(numbers: List[float], threshold: float) -> bool:
    for idx, elem in enumerate(numbers):
        for idx2, elem2 in enumerate(numbers):
            if idx != idx2:
                distance = abs(elem - elem2)
                if distance < threshold:
                    return True

    return False

def fib(n: int):
    if n == 0:
        return 0
    if n == 1:
        return 1
    return fib(n - 1) + fib(n - 2)
```
