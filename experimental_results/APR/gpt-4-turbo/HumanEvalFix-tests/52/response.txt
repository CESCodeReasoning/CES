Here are the fixed versions of the two functions, `has_close_elements` and `below_threshold`, based on the specifications and test cases provided:

### Fixed Code for `has_close_elements`
```python
from typing import List

def has_close_elements(numbers: List[float], threshold: float) -> bool:
    for idx, elem in enumerate(numbers):
        for idx2, elem2 in enumerate(numbers):
            if idx != idx2:
                distance = abs(elem - elem2)  # Use absolute value to measure distance correctly
                if distance < threshold:
                    return True
    return False
```

### Fixed Code for `below_threshold`
```python
def below_threshold(l: list, t: int) -> bool:
    for e in l:
        if e >= t:  # If any element is not below the threshold, return False
            return False
    return True  # Return True only if all elements are below the threshold
```

These fixes address the logical errors in the original implementations:
- In `has_close_elements`, the absolute value is used to correctly calculate the distance between two numbers.
- In `below_threshold`, the logic is inverted to correctly check if all elements are below the threshold, rather than checking if any element is not below the threshold.