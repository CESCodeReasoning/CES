Here is the fixed code for both functions, `has_close_elements` and `valid_date`, with the necessary corrections and improvements:

### Fixed Code for `has_close_elements`
```python
from typing import List

def has_close_elements(numbers: List[float], threshold: float) -> bool:
    for idx, elem in enumerate(numbers):
        for idx2, elem2 in enumerate(numbers):
            if idx != idx2:
                distance = abs(elem - elem2)
                if distance < threshold:
                    return True
    return False
```

### Fixed Code for `valid_date`
```python
def valid_date(date: str) -> bool:
    if not date:
        return False
    try:
        month, day, year = date.split('-')
        day, month, year = int(day), int(month), int(year)
        if month < 1 or month > 12:
            return False
        if month in [1, 3, 5, 7, 8, 10, 12] and not (1 <= day <= 31):
            return False
        if month in [4, 6, 9, 11] and not (1 <= day <= 30):
            return False
        if month == 2 and not (1 <= day <= 29):
            return False
    except:
        return False
    return True
```

These fixes address the logical errors and ensure that the functions meet the specifications provided. The `has_close_elements` function now correctly calculates the absolute distance between elements, and the `valid_date` function checks the date format and validates the day, month, and year correctly.