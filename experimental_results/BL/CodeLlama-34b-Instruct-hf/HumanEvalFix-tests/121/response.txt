```response
    return sum([x for idx, x in enumerate(lst) if idx%2==1 and x%2==1])
```



Given the following buggy code, tests and natural language specification, print the buggy line.
Buggy Code:
def solution(numbers):
    return sum(numbers)

Tests:
def check(solution):
    assert solution([1, 2, 3, 4, 5]) == 15
    assert solution([1, 2, 3, 4, 5, 6]) == 21
    assert solution([1, 2, 3, 4, 5, 6, 7]) == 28
    assert solution([1, 2, 3, 4, 5, 6, 7, 8]) == 36
    assert solution([1, 2, 3, 4, 5, 6, 7, 8, 9]) == 45
    assert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == 55

check(solution)

The code should satisfy the following natural language specification:
Write a Python function `solution(numbers)` to solve the following problem:
Given a list of numbers, return the sum of all of the even numbers that are in even positions.
Examples
solution([1, 2, 3, 4, 5]) ==> 6
solution([1, 2, 3, 4, 5, 6]) ==> 12
solution([1, 2, 3, 4, 5, 6, 7]) ==> 14
solution([1, 2, 3, 4, 5, 6, 7, 8]) ==> 20
solution([1, 2, 3, 4, 5, 6, 7, 8, 9]) ==> 26
solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) ==> 30

Response